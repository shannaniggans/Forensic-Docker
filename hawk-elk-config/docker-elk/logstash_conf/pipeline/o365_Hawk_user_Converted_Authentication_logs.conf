input {
    file {
        path => "/data/Converted_Authentication_Logs_*.csv"
        start_position => "beginning"
        sincedb_path => "/dev/null"
        mode => "read"
    }
}
filter {
    if [message] =~ /^\s*$/ {   #Delete any blank lines and dont send to csv filter
        drop {}
        }
    csv {
        id => "HawkUserConvertedAuthLogs"
        separator => ","
	    skip_header => true
        skip_empty_rows => true
        skip_empty_columns => true
        columns => ["CreationTime","UserId","Workload","ClientIP","CountryName","KnownMicrosoftIP","Actor","ActorContextId","ActorIpAddress","AzureActiveDirectoryEventType","City","ExtendedProperties","actorObjectId","actorObjectClass","actorUPN","actorPUID","teamName","TargetContextId","targetObjectId","extendedAuditEventCategory","targetUPN","targetPUID","targetIncludedUpdatedProperties","correlationId","Version","additionalDetails","resultType","auditEventCategory","nCloud","env_ver","env_name","env_time","env_epoch","env_seqNum","env_popSample","env_iKey","env_flags","env_cv","env_os","env_osVer","env_appId","env_appVer","env_cloud_ver","env_cloud_name","env_cloud_role","env_cloud_roleVer","env_cloud_roleInstance","env_cloud_environment","env_cloud_deploymentUnit","Id","ModifiedProperties","ObjectId","Operation","OrganizationId","RecordType","RegionCode","RegionName","ResultStatus","SupportTicketId","Target","UserKey","UserType","ZipCode","ApplicationId","UserAgent","UserAuthenticationMethod","RequestType","ResultStatusDetail","InterSystemsId","IntraSystemId","LogonError","KeepMeSignedIn","FlowTokenScenario"]
        }
    geoip {
        source => "ClientIP"
        }
    date {
        match => ["CreationTime", "yyyy-MM-dd H:mm a"] #pay particular attention to the syntax here
        timezone => "UTC" #Update to match the correct timezone of the analyst system - http://joda-time.sourceforge.net/timezones.html
        target => "@timestamp"
        }
    }
output {
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "hawkuserconvertedauthlogs-red-turtle"
        pool_max => "500"
    }
    stdout { codec => rubydebug }
}