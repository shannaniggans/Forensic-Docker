input {
	file {
		type => "IISLog"
		path => "/data/W3SVC*/*.log"
		sincedb_path => "/dev/null"
		start_position => "beginning"
		mode => "read"
	}
}

filter {

	# ignore log comments
	if [message] =~ "^#" {
		drop {}
	}
 
 	# check that fields match your IIS log settings
	grok {
    	match => ["message", "%{NOTSPACE:date} %{NOTSPACE:time} %{IPORHOST:site} %{WORD:method} %{URIPATH:page} %{NOTSPACE:querystring} %{NUMBER:port} %{NOTSPACE:username} %{IPORHOST:clienthost} %{NOTSPACE:useragent} %{NOTSPACE:referrer} %{NUMBER:response} %{NUMBER:subresponse} %{NUMBER:scstatus} %{NUMBER:time_taken}"]
	}
  
	geoip {
                source => "clienthost"
        }
	# set the event timestamp from the log
	# https://www.elastic.co/guide/en/logstash/current/plugins-filters-date.html
	 mutate {
                add_field => {
                        "log_timestamp" => "%{date} %{time}"
                }
        }
	
	date {
		match => [ "log_timestamp", "YYYY-MM-dd HH:mm:ss" ]
		timezone => "UCT"
		target => "@timestamp"
	}
	
	# matches the big, long nasty useragent string to the actual browser name, version, etc
	# https://www.elastic.co/guide/en/logstash/current/plugins-filters-useragent.html
	useragent {
		source=> "useragent"
		prefix=> "browser_"
	}
}

# output logs to console and to elasticsearch
output {
   	elasticsearch { 
        hosts => ["elasticsearch:9200"] 
        index => "iislogs-bonelobster"
		pool_max => "500"
    }
	 stdout { codec => rubydebug }
}